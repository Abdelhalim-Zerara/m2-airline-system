server.port=9090
spring.cloud.gateway.discovery.locator.enabled=true # Simplifie le routage en utilisant les noms de service Eureka
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Configuration explicite des routes
# # Le format est /api/{nom-du-service}/**
# spring.cloud.gateway.routes[0].id=search-service
# spring.cloud.gateway.routes[0].uri=lb://search-service
# spring.cloud.gateway.routes[0].predicates[0]=Path=/api/search/**
# spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/search/(?<segment>.*), /$\{segment}

# spring.cloud.gateway.routes[1].id=booking-service
# spring.cloud.gateway.routes[1].uri=lb://booking-service
# spring.cloud.gateway.routes[1].predicates[0]=Path=/api/bookings/**
# spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/bookings/(?<segment>.*), /$\{segment}

# spring.cloud.gateway.routes[2].id=customer-service
# spring.cloud.gateway.routes[2].uri=lb://customer-service
# spring.cloud.gateway.routes[2].predicates[0]=Path=/api/customers/**
# spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/customers/(?<segment>.*), /$\{segment}

# spring.cloud.gateway.routes[3].id=checkin-service
# spring.cloud.gateway.routes[3].uri=lb://checkin-service
# spring.cloud.gateway.routes[3].predicates[0]=Path=/api/checkin/**
# spring.cloud.gateway.routes[3].filters[0]=RewritePath=/api/checkin/(?<segment>.*), /$\{segment}
